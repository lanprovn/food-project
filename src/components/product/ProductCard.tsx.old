import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import type { Product } from '../../types/product';
import { formatPrice, formatRating } from '../../utils/formatPrice';
import ButtonFilled from '../shared/ButtonFilled';
import { useCart } from '../../hooks/useCart';
import { useWishlist } from '../../hooks/useWishlist';
import ProductDetailModal from './ProductDetailModal';

interface ProductCardProps {
  product: Product;
  className?: string;
}

const ProductCard: React.FC<ProductCardProps> = ({
  product,
  className = '',
}) => {
  const [isModalOpen, setIsModalOpen] = useState(false);
  const { addItem } = useCart();
  const { addItem: addToWishlist, removeItem: removeFromWishlist, isInWishlist } = useWishlist();
  const navigate = useNavigate();

  const handleOrderClick = () => {
    addItem(product);
  };

  const handleWishlistClick = (e: React.MouseEvent) => {
    e.stopPropagation();
    if (isInWishlist(product.id)) {
      removeFromWishlist(product.id);
    } else {
      addToWishlist(product);
    }
  };

  const handleCardClick = () => {
    navigate(`/product/${product.id}`);
  };

  return (
    <>
      <div className={`bg-white rounded-xl shadow-sm hover:shadow-lg overflow-hidden transition-all duration-300 border border-gray-100 hover-lift ${className}`}>
        <div className="relative group" onClick={handleCardClick}>
          <img
            src={product.image}
            alt={product.name}
            className="w-full h-52 object-cover group-hover:scale-105 transition-transform duration-300"
          />
          
          {/* Discount Badge */}
          {product.discount && (
            <div className="absolute top-3 right-3 bg-gradient-to-r from-red-500 to-red-600 text-white px-3 py-1 rounded-full text-sm font-bold shadow-lg">
              -{product.discount}%
            </div>
          )}
          
          {/* Wishlist Button */}
          <button
            onClick={handleWishlistClick}
            className="absolute top-3 left-3 w-10 h-10 bg-white/90 backdrop-blur-sm rounded-full flex items-center justify-center shadow-lg hover:bg-white hover:scale-110 transition-all duration-200"
            title={isInWishlist(product.id) ? "Bỏ yêu thích" : "Thêm vào yêu thích"}
          >
            <i className={`fas fa-heart text-lg ${isInWishlist(product.id) ? 'text-red-500' : 'text-gray-500'}`}></i>
          </button>
          
          {/* Quick Add Button (appears on hover) */}
          <div className="absolute inset-0 bg-black/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center">
            <button
              onClick={(e: React.MouseEvent) => {
                e.stopPropagation();
                handleOrderClick();
              }}
              className="bg-primary hover:bg-red-600 text-white font-semibold px-4 py-2 rounded-lg transition-all duration-300 transform translate-y-4 group-hover:translate-y-0"
            >
              <i className="fas fa-plus mr-2"></i>
              Thêm nhanh
            </button>
          </div>
        </div>
        
        <div className="p-5">
          {/* Product Name */}
          <h3 
            className="font-bold text-lg text-gray-900 mb-2 line-clamp-2 cursor-pointer hover:text-primary transition-colors"
            onClick={handleCardClick}
            title={product.name}
          >
            {product.name}
          </h3>
          
          {/* Restaurant */}
          <div className="flex items-center mb-3">
            <i className="fas fa-store text-gray-400 text-sm mr-2"></i>
            <span className="text-gray-600 text-sm font-medium">{product.restaurant}</span>
          </div>
          
          {/* Rating and Price */}
          <div className="flex items-center justify-between mb-4">
            <div className="flex items-center space-x-1">
              <div className="flex items-center">
                <i className="fas fa-star text-yellow-400 text-sm"></i>
                <span className="text-gray-700 text-sm font-medium ml-1">{formatRating(product.rating)}</span>
              </div>
              <span className="text-gray-300">•</span>
              <span className="text-gray-500 text-sm">Đánh giá</span>
            </div>
            
            <div className="text-right">
              <div className="text-gray-900 font-bold text-lg">
                {formatPrice(product.price)}
              </div>
              {product.discount && (
                <div className="text-gray-500 text-sm line-through">
                  {formatPrice(product.price * (1 + product.discount / 100))}
                </div>
              )}
            </div>
          </div>
          
          {/* Add to Cart Button */}
          <ButtonFilled
            onClick={handleOrderClick}
            variant="primary"
            size="sm"
            className="w-full hover:shadow-lg transition-all duration-200 py-3 text-base font-medium"
          >
            <i className="fas fa-shopping-cart mr-2"></i>
            Thêm vào giỏ
          </ButtonFilled>
        </div>
      </div>
      
      {isModalOpen && (
        <ProductDetailModal
          product={product}
          onClose={() => setIsModalOpen(false)}
        />
      )}
    </>
  );
};

export default ProductCard;
